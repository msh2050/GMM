using System;
using System.Windows.Forms;
using DevExpress.XtraBars;
using DevExpress.XtraBars.Ribbon;

namespace GMM.forms
{
    public partial class MembersList : RibbonForm
    {
        private int _memberid;

        public MembersList()
        {
            InitializeComponent();

            // This line of code is generated by Data Source Configuration Wizard
            //membersTableAdapter1.Fill(dataDataSet1.members);
            // This line of code is generated by Data Source Configuration Wizard
        }

        private void MembersList_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'dataDataSet.members' table. You can move, or remove it, as needed.
            membersTableAdapter1.Fill(dataDataSet1.members);
        }

        private void bbiNew_ItemClick(object sender, ItemClickEventArgs e)
        {
            var memberDetails = new MemberDetails();
            memberDetails.MdiParent = MdiParent;
            memberDetails.Show();
        }

        private void bbiRefresh_ItemClick(object sender, ItemClickEventArgs e)
        {
            membersTableAdapter1.Fill(dataDataSet1.members);
        }

        private void bbiEdit_ItemClick(object sender, ItemClickEventArgs e)
        {
            var memberDetails = new MemberDetails(int.Parse(tileView1.GetFocusedRowCellDisplayText("ID")));
            memberDetails.MdiParent = MdiParent;
            memberDetails.Show();
        }

        private void tileView1_DoubleClick(object sender, EventArgs e)
        {
            if (e is MouseEventArgs mouseArgs)
            {
                var hitInfo = tileView1.CalcHitInfo(mouseArgs.Location);
                if (hitInfo.InItem)
                {
                    var memberDetails =
                        new MemberDetails(int.Parse(tileView1.GetFocusedRowCellDisplayText("ID")));
                    memberDetails.MdiParent = MdiParent;
                    memberDetails.Show();}
            }
        }

        private void barEditItem2_EditValueChanged(object sender, EventArgs e)
        {
            var searchtext = barEditItem2.EditValue.ToString();
            membersBindingSource.Filter = string.IsNullOrEmpty(searchtext)
                ? "name IS NOT NULL"
                : $"name LIKE '%{searchtext}%' OR phonenumber LIKE '%{searchtext}%' " +
                  $"OR AlternatePhoneNumber LIKE '%{searchtext}%' OR Barecode LIKE '{searchtext}'" +
                $"OR Id = '{searchtext}' ";
            ////focus not working
            //barEditItem2.Links[0].Focus();
            //(barEditItem2.Links[0] as BarEditItemLink)?.ShowEditor();
            //ribbonControl.SelectedPage.Groups[2].ItemLinks[0].Focus();
            //(ribbonControl.SelectedPage.Groups[2].ItemLinks[0] as BarEditItemLink).ShowEditor();
        }

      private void tileView1_ItemRightClick_1(object sender,
            DevExpress.XtraGrid.Views.Tile.TileViewItemClickEventArgs e)
        {
            _memberid = int.Parse(tileView1.GetFocusedRowCellDisplayText("ID"));
            popupMenu1.ShowPopup(MousePosition);
        }

        private void barButtonItem2_ItemClick(object sender, ItemClickEventArgs e)
        {
            memcheckTableAdapter1.Insertcheck(_memberid, DateTime.Now);
        }
    }
}