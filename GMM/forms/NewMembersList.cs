using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using GMM.helpers;

namespace GMM.forms
{
    public partial class NewMembersList : DevExpress.XtraEditors.XtraForm
    {
        public NewMembersList()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            dataTable2TableAdapter1.Fill(dataDataSet1.DataTable2);
        }

        private void tileView1_CustomColumnDisplayText(object sender, DevExpress.XtraGrid.Views.Base.CustomColumnDisplayTextEventArgs e)
        {
            if (e.Column != tileView1.ColumnSet.GroupColumn) return;
            e.DisplayText = e.DisplayText == "Unchecked" ? "المشتركين" : "الملغيين";
            
        }

        private void tileView1_ItemCustomize(object sender, DevExpress.XtraGrid.Views.Tile.TileViewItemCustomizeEventArgs e)
        {
            string piclocation = MemberDetails.Saveloaction + e.Item.Elements[9].Text;
            if (File.Exists(piclocation))
            {
                e.Item.Elements[8].Image = LoadPicture.GetImage(piclocation);
            }

            if (!(short.Parse(string.IsNullOrEmpty(e.Item.Elements[6].Text) ? "0" : e.Item.Elements[6].Text) > 0))
            {
                e.Item.Elements[6].Text = "";
            }

            if (DateTime.ParseExact(e.Item.Elements[7].Text, "dd / MM / yyyy", null) < DateTime.Today)
            {
                e.Item.Appearance.BackColor = Color.Red;
            }

        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            var memberDetails = new MemberDetails();
            memberDetails.MdiParent = MdiParent;
            memberDetails.Show();
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            var memberDetails = new MemberDetails(int.Parse(tileView1.GetFocusedRowCellDisplayText("ID")));
            memberDetails.MdiParent = MdiParent;
            memberDetails.Show();
        }

        private void tileView1_DoubleClick(object sender, EventArgs e)
        {
            if (e is MouseEventArgs mouseArgs)
            {
                var hitInfo = tileView1.CalcHitInfo(mouseArgs.Location);
                if (hitInfo.InItem)
                {
                    var memberDetails =
                        new MemberDetails(int.Parse(tileView1.GetFocusedRowCellDisplayText("ID")));
                    memberDetails.MdiParent = MdiParent;
                    memberDetails.Show();
                }
            }
        }

        private void tileView1_ContextButtonClick(object sender, DevExpress.Utils.ContextItemClickEventArgs e)
        {
            memcheckTableAdapter1.Insertcheck(int.Parse(tileView1.GetFocusedRowCellDisplayText("ID")), DateTime.Now);
        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            dataTable2TableAdapter1.Fill(dataDataSet1.DataTable2);
        }
    }
}